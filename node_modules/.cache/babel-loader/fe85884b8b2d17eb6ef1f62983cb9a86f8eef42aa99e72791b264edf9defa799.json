{"ast":null,"code":"let particles = [];\nfunction setup() {\n  createCanvas(window.innerWidth, window.innerHeight);\n  for (let i = 0; i < window.innerWidth / 5; i++) {\n    particles.push(new Particle());\n  }\n}\nfunction draw() {\n  background('#16166B');\n  for (let i = 0; i < particles.length; i++) {\n    particles[i].createParticle();\n    particles[i].moveParticle();\n    particles[i].joinParticles(particles.slice(i));\n  }\n}\nclass Particle {\n  constructor() {\n    this.x = random(0, width);\n    this.y = random(0, height);\n    this.size = random(0, 5);\n    this.speedX = random(0, 1);\n    this.speedY = random(0, 1);\n  }\n  createParticle() {\n    noStroke();\n    fill('rgba(200, 169, 169, 0.5)');\n    circle(this.x, this.y, this.size);\n  }\n  moveParticle() {\n    if (this.x < 0 || this.x > width) this.speedX *= -1;\n    if (this.y < 0 || this.y > height) this.speedY *= -1;\n    this.x += this.speedX;\n    this.y += this.speedY;\n  }\n  joinParticles(particles) {\n    particles.forEach(element => {\n      let dis = dist(this.x, this.y, element.x, element.y);\n      if (dis < 85) {\n        stroke('rgba(200, 169, 169, 0.5)');\n        line(this.x, this.y, element.x, element.y);\n      }\n    });\n  }\n}\nfunction mouseMoved() {\n  for (let i = 0; i < particles.length; i++) {\n    let distance = dist(mouseX, mouseY, particles[i].x, particles[i].y);\n    if (distance < 60) {\n      particles[i].speedX = (particles[i].x - mouseX) / 20;\n      particles[i].speedY = (particles[i].y - mouseY) / 20;\n    }\n  }\n}","map":{"version":3,"names":["particles","setup","createCanvas","window","innerWidth","innerHeight","i","push","Particle","draw","background","length","createParticle","moveParticle","joinParticles","slice","constructor","x","random","width","y","height","size","speedX","speedY","noStroke","fill","circle","forEach","element","dis","dist","stroke","line","mouseMoved","distance","mouseX","mouseY"],"sources":["C:/Users/Mazigh/react-portfolio2/src/components/Home/Animation.js"],"sourcesContent":["let particles = [];\r\n\r\nfunction setup() {\r\n  createCanvas(window.innerWidth, window.innerHeight);\r\n  for (let i = 0; i < window.innerWidth / 5; i++) {\r\n    particles.push(new Particle());\r\n  }\r\n}\r\n\r\nfunction draw() {\r\n  background('#16166B');\r\n  for (let i = 0; i < particles.length; i++) {\r\n    particles[i].createParticle();\r\n    particles[i].moveParticle();\r\n    particles[i].joinParticles(particles.slice(i));\r\n  }\r\n}\r\n\r\nclass Particle {\r\n  constructor() {\r\n    this.x = random(0, width);\r\n    this.y = random(0, height);\r\n    this.size = random(0, 5);\r\n    this.speedX = random(0, 1);\r\n    this.speedY = random(0, 1);\r\n  }\r\n\r\n  createParticle() {\r\n    noStroke();\r\n    fill('rgba(200, 169, 169, 0.5)');\r\n    circle(this.x, this.y, this.size);\r\n  }\r\n\r\n  moveParticle() {\r\n    if (this.x < 0 || this.x > width) this.speedX *= -1;\r\n    if (this.y < 0 || this.y > height) this.speedY *= -1;\r\n    this.x += this.speedX;\r\n    this.y += this.speedY;\r\n  }\r\n\r\n  joinParticles(particles) {\r\n    particles.forEach((element) => {\r\n      let dis = dist(this.x, this.y, element.x, element.y);\r\n      if (dis < 85) {\r\n        stroke('rgba(200, 169, 169, 0.5)');\r\n        line(this.x, this.y, element.x, element.y);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction mouseMoved() {\r\n  for (let i = 0; i < particles.length; i++) {\r\n    let distance = dist(mouseX, mouseY, particles[i].x, particles[i].y);\r\n    if (distance < 60) {\r\n      particles[i].speedX = (particles[i].x - mouseX) / 20;\r\n      particles[i].speedY = (particles[i].y - mouseY) / 20;\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}